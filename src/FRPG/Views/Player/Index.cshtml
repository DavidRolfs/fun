@{
    ViewData["Title"] = "Gummi Kingdom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<FRPG.Models.Player>
<canvas id="c"></canvas>

<h2>Here is your character, @User.Identity.Name</h2>
<hr />

@if (Model.Any())
{
    <ul>
        @foreach (var listItem in Model)
        {
            <li>Name: @Html.DisplayFor(modelPlayer => listItem.Name)</li>
            <li>Image Path: @Html.DisplayFor(modelPlayer => listItem.ImagePath)</li>
            <li>ImageToByte: @Html.DisplayFor(modelPlayer => listItem.ImageToByte)</li>
            <li>Bio: @Html.DisplayFor(modelPlayer => listItem.Bio)</li>
            <li>Age: @Html.DisplayFor(modelPlayer => listItem.Age)</li>
            <li>Charm: @Html.DisplayFor(modelPlayer => listItem.Charm)</li>
            <li>Wealth: @Html.DisplayFor(modelPlayer => listItem.Wealth)</li>
            <li>Physique: @Html.DisplayFor(modelPlayer => listItem.Physique)</li>
            <li>Intellect: @Html.DisplayFor(modelPlayer => listItem.Intellect)</li>
            <li>Experience: @Html.DisplayFor(modelPlayer => listItem.Experience)</li>
            <li>@Html.ActionLink("Edit", "Edit", new { id = listItem.Id })</li>
            <li>@Html.ActionLink("Delete", "Delete", new { id = listItem.Id })</li>
            

        }
    </ul>
}
else
{
    <p>No players have been added yet!</p>
}

@Html.ActionLink("Create new", "Create")

@Html.ActionLink("Color", "Color")


<style>/*basic reset*/
* {margin: 0; padding: 0;}
/*adding a black bg to the body to make things clearer*/
body {background: black;}
canvas {display: block;}
    h2, li {
        color: #ffffff;
    }
    </style>

<script>
    var c = document.getElementById("c");
    var ctx = c.getContext("2d");

    //making the canvas full screen
    c.height = window.innerHeight;
    c.width = window.innerWidth;

    //chinese characters - taken from the unicode charset
    var chinese = "who pooped the bed";
    //converting the string into an array of single characters
    chinese = chinese.split("");

    var font_size = 10;
    var columns = c.width / font_size; //number of columns for the rain
    //an array of drops - one per column
    var drops = [];
    //x below is the x coordinate
    //1 = y co-ordinate of the drop(same for every drop initially)
    for (var x = 0; x < columns; x++)
        drops[x] = 1;

    //drawing the characters
    function draw() {
        //Black BG for the canvas
        //translucent BG to show trail
        ctx.fillStyle = "rgba(0, 0, 0, 0.05)";
        ctx.fillRect(0, 0, c.width, c.height);

        ctx.fillStyle = "#0F0"; //green text
        ctx.font = font_size + "px arial";
        //looping over drops
        for (var i = 0; i < drops.length; i++) {
            //a random chinese character to print
            var text = chinese[Math.floor(Math.random() * chinese.length)];
            //x = i*font_size, y = value of drops[i]*font_size
            ctx.fillText(text, i * font_size, drops[i] * font_size);

            //sending the drop back to the top randomly after it has crossed the screen
            //adding a randomness to the reset to make the drops scattered on the Y axis
            if (drops[i] * font_size > c.height && Math.random() > 0.975)
                drops[i] = 0;

            //incrementing Y coordinate
            drops[i]++;
        }
    }

    setInterval(draw, 33);
</script>